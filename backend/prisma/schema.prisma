// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  passwordHash String @map("password_hash")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  lastSyncAt DateTime? @map("last_sync_at")
  
  // Relations
  sensors    Sensor[]
  
  @@map("users")
}

model Sensor {
  id           String   @id @default(uuid())
  userId       String   @map("user_id")
  serialNumber String   @map("serial_number")
  lotNumber    String   @map("lot_number")
  dateAdded    DateTime @map("date_added")
  isProblematic Boolean @default(false) @map("is_problematic")
  issueNotes   String?  @map("issue_notes")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  syncedAt     DateTime? @map("synced_at")
  isDeleted    Boolean  @default(false) @map("is_deleted")
  
  // Relations
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  photos       Photo[]
  
  @@index([userId])
  @@index([updatedAt])
  @@map("sensors")
}

model Photo {
  id        String   @id @default(uuid())
  sensorId  String   @map("sensor_id")
  fileName  String   @map("file_name")
  fileSize  Int      @map("file_size")
  mimeType  String   @map("mime_type")
  cloudUrl  String?  @map("cloud_url")
  dateAdded DateTime @map("date_added")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  syncedAt  DateTime? @map("synced_at")
  isDeleted Boolean  @default(false) @map("is_deleted")
  
  // Relations
  sensor    Sensor   @relation(fields: [sensorId], references: [id], onDelete: Cascade)
  
  @@index([sensorId])
  @@index([updatedAt])
  @@map("photos")
}